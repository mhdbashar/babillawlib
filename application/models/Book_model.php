<?php

/*
 * Generated by CRUDigniter v3.2 
 * www.crudigniter.com
 */

class Book_model extends CI_Model {

    function __construct() {
        parent::__construct();
    }

    /*
     * Get book by book_id
     */

    function get_book($book_id) {
        return $this->db->get_where('book', array('book_id' => $book_id))->row_array();
    }
	
	function get_material_sys_case($book_id) {
        return $this->db->query("select book.material_number_legislation from book,case_law_system where case_law_system.case_law_id=book.book_id and case_law_system.system_id=book.book_id and book.book_id='" . $book_id . "'  ")->row();
    }

    /*
     * Get all book
     */

    function get_all_book() {
        $this->db->order_by('book_id', 'desc');
        return $this->db->get('book')->result_array();
    }

    /*
     * function to add new book
     */

    function add_book($params) {
        $this->db->insert('book', $params);
        return $this->db->insert_id();
    }

    /*
     * function to update book
     */

    function update_book($book_id, $params) {
        $this->db->where('book_id', $book_id);
        return $this->db->update('book', $params);
    }

    /*
     * function to delete book
     */

    function delete_book($book_id) {


        //  return $this->db->delete('book',array('book_id'=>$book_id));
        // $sql = "delete from book ,book_tag  using book,  book_tag where (book.book_id=book_tag.book_id)  and (book.book_id='".$book_id."' )";




        $sql2 = "delete from tag using tag where tag_id in (select tag_id from book_tag where book_id='" . $book_id . "') and tag_id NOT IN "
                . "(SELECT tag_id FROM book_tag WHERE book_id != '" . $book_id . "')";
        $this->db->query($sql2);
        $sql1 = "delete from book,book_tag using book,book_tag where  book.book_id=book_tag.book_id and book.book_id='" . $book_id . "' ";
        $this->db->query($sql1);
    }

    function search_via_section_k($section_id) {


        $sql = "select * from tag,book_tag,book where  book.book_id=book_tag.book_id and book_tag.tag_id=tag.tag_id and book.section_id='" . $section_id . "'";


        $query = $this->db->query($sql);

        return $query->row();
    }

    function search_via_section($section_id) {


        $sql = "select * from book   where section_id='" . $section_id . "' ";


        $query = $this->db->query($sql);

        return $query->result();
    }

    function search_via_section_to_edit($section_id) {


        $sql = "select * from book where   section_id='" . $section_id . "'";


        $query = $this->db->query($sql);

        return $query->result_array();
    }

    function get_tag_book($book_id) {
        $sql = "select * from tag,book_tag,book where book.book_id=book_tag.book_id and book_tag.tag_id=tag.tag_id and book.book_id='" . $book_id . "' ";
        $query = $this->db->query($sql);
        return $query->row();
    }

//      function get_tag_book_via_section($section_id) {
//        $sql = "select * from tag,book_tag,book where book.book_id=book_tag.book_id and book_tag.tag_id=tag.tag_id and book.section_id='" . $section_id . "' ";
//        $query = $this->db->query($sql);
//       return $query->result();
//    }


    function search_material_book_via_section($section_id) {
        $sql = "select * from book,materials where book.section_id='" . $section_id . "' and book.book_id=materials.book_id ";
        $query = $this->db->query($sql);
        return $query->result();
    }

    function search_version_book_via_section($section_id) {
        $sql = "select * from book,version where book.section_id='" . $section_id . "' and book.book_id=version.book_id ";
        $query = $this->db->query($sql);
        return $query->result();
    }

    public function getbooksCount($section_id) {

        $sql = "select count(book.section_id) as allcount from book where file is NOT NULL and  section_id='" . $section_id . "'";

        $query = $this->db->query($sql);

        $result = $query->result_array();
        if ($result) {

            return $result[0]['allcount'];
        } else {
            return false;
        }
    }

    public function books($rowno, $rowperpage, $section_id) {

        $this->db->select('*');
        $this->db->from('book b ,materials m');
        $this->db->where('(b.section_id="' . $section_id . '") and (b.book_id=m.book_id) ');


        $this->db->limit($rowperpage, $rowno);
        $query = $this->db->get();
        if ($query) {

            return $query->result_array();
        } else {
            return false;
        }
    }

    public function getbooksCount_modal($section_id) {

        $sql = "select count(book.section_id) as allcount from book where   section_id='" . $section_id . "'";

        $query = $this->db->query($sql);

        $result = $query->result_array();
        if ($result) {

            return $result[0]['allcount'];
        } else {
            return false;
        }
    }

    public function books_modal($rowno, $rowperpage, $section_id) {

        $this->db->select('*');
        $this->db->from('book b ,materials m');
        $this->db->where('(b.section_id="' . $section_id . '") and (b.book_id=m.book_id) ');


        $this->db->limit($rowperpage, $rowno);
        $query = $this->db->get();
        if ($query) {

            return $query->result_array();
        } else {
            return false;
        }
    }

    function fetch_country() {
        $this->db->order_by("country_name", "ASC");
        $query = $this->db->get("country");
        return $query->result();
    }

    function fetch_city($country_id) {
        $this->db->where('country_id', $country_id);
        $this->db->order_by('city_name', 'ASC');
        $query = $this->db->get('city');
        $output = '<option value="">Select City</option>';
        foreach ($query->result() as $row) {
            $output .= '<option value="' . $row->city_id . '">' . $row->city_name . '</option>';
        }
        return $output;
    }

    function fetch_data($query = '', $section_id) {

          
           

        if (($query != '') && $section_id == 34) {
            
            $result = $this->db->query("select * from book k, fields_values a,custom_fields b  where a.field_id=b.id   and   b.section_id= '" . $section_id . "'")->result_array();
            
            
            
            
            $this->db->select("*");
            $this->db->from("book");
            $this->db->where("main_section", $section_id);
            $this->db->like('book_title', $query);
            $this->db->or_like('url', $query);
            $this->db->or_like('publisher', $query);
            $this->db->or_like('author', $query);
            $this->db->or_like('year_publication', $query);
            $this->db->or_like('dis', $query);
            $query = $this->db->get();
            return $query->result();
        } elseif (($query != '') && $section_id == 33) {
            $this->db->select("*");
            $this->db->from("book");
            $this->db->where("main_section", $section_id);

            $this->db->like('book_title', $query);
            $this->db->or_like('url', $query);
            $this->db->or_like('dis', $query);
            $query = $this->db->get();
            return $query->result();
            
        }elseif (($query != '') && $section_id == 35) {
            $this->db->select("*");
            $this->db->from("book");
            $this->db->where("main_section", $section_id);

            $this->db->like('book_title', $query);
            $this->db->or_like('url', $query);
            $this->db->or_like('dis', $query);
            $query = $this->db->get();
            return $query->result();




		}elseif (($query != '') && $section_id == 32) {
            $this->db->select("*");
            $this->db->from("book");
            $this->db->where("main_section", $section_id);
                $this->db->like('pass', $query);
            $this->db->or_like('dis', $query);

            
            $this->db->or_like('history_system_m', $query);
            $this->db->or_like('date_publication_m', $query);
            $this->db->or_like('accreditation', $query);
            $this->db->or_like('url', $query);
           //$this->db->or_like('version', $query);
            
            $query = $this->db->get();
            return $query->result();
            
        } elseif (($query != '') && $section_id == 31) {
            $this->db->select("*");
            $this->db->from("book");
            $this->db->where("main_section", $section_id);
            $this->db->like('book_title', $query);
            $this->db->or_like('url', $query);
            $this->db->or_like('dis', $query);
            $this->db->or_like('country', $query);
            $this->db->or_like('city', $query);
            $this->db->or_like('ruling_year', $query);
            $this->db->or_like('volume_number', $query);
            $this->db->or_like('issue_classification', $query);
            $this->db->or_like('summary_of_judgment', $query);
            $this->db->or_like('sentencing_text', $query);
            $this->db->or_like('the_reasons', $query);
            $this->db->or_like('the_legal_bond', $query);
            $this->db->or_like('pronounced_judgment', $query);
            $query = $this->db->get();
            return $query->result();
        }
    }
    function country_legislation($section_id) {
          $result = $this->db->query( 'SELECT c.country_name,c.country_id,b.legislative_type, count(b.country) as allcount  FROM country c, book b where (b.country=c.country_id ) and(b.section_id="' . $section_id . '")  group by b.country ')->result_array();
          return $result;
    }
	
	function load_book_via_country_name($section_id,$country_name){
	        $result = $this->db->query( 'SELECT   *  from book b , country c  where   c.country_id = b.country and c.country_name= "'.$country_name.'"  and  section_id="' . $section_id . '"   ')->result_array();
          return $result;
		
	}
        
        function add_system_case($params) {
          $this->db->insert('case_law_system', $params);
          return $this->db->insert_id();
        }
		  function add_linked_case($params) {
          $this->db->insert('linked_system', $params);
          return $this->db->insert_id();
        }
		
		
    
    
    

}
