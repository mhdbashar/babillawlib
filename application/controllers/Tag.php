<?php
/* 
 * Generated by CRUDigniter v3.2 
 * www.crudigniter.com
 */
 
class Tag extends Front_end{
    function __construct()
    {
        parent::__construct();
        $this->load->model('Tag_model');
    } 

    /*
     * Listing of tag
     */
    function index()
    {
        $data['tag'] = $this->Tag_model->get_all_tag();
        
        
       $this->layout->view('tag/index',$data);
    }

    /*
     * Adding a new tag
     */
    function add()
    {   
        if(isset($_POST) && count($_POST) > 0)     
        {   
            $params = array(
				'tag_name' => $this->input->post('tag_name'),
            );
            
            $tag_id = $this->Tag_model->add_tag($params);
            redirect('tag/index');
        }
        else
        {            
       
            $this->layout->view('tag/add');
        }
    }  

    /*
     * Editing a tag
     */
    function edit($tag_id)
    {   
        // check if the tag exists before trying to edit it
        $data['tag'] = $this->Tag_model->get_tag($tag_id);
        
        if(isset($data['tag']['tag_id']))
        {
            if(isset($_POST) && count($_POST) > 0)     
            {   
                $params = array(
					'tag_name' => $this->input->post('tag_name'),
                );

                $this->Tag_model->update_tag($tag_id,$params);            
                redirect('tag/index');
            }
            else
            {
                $data['_view'] = 'tag/edit';
                 $this->layout->view('tag/edit',$data);
            }
        }
        else
            show_error('The tag you are trying to edit does not exist.');
    } 

    /*
     * Deleting tag
     */
    function remove($tag_id)
    {
        $tag = $this->Tag_model->get_tag($tag_id);

        // check if the tag exists before trying to delete it
        if(isset($tag['tag_id']))
        {
            $this->Tag_model->delete_tag($tag_id);
            redirect('tag/index');
        }
        else
            show_error('The tag you are trying to delete does not exist.');
    }
    function auto_complate_tag() {
      
        $tag_name= $this->input->get('query');
        $sql="select * from tag WHERE tag_name LIKE '%".$tag_name."%' ";
        $query=$this->db->query($sql);
        $result=$query->result();
        foreach ($result as $value) {
            $json[]=$value->tag_name;
        }
        echo json_encode($json);
        
    }
    
}
